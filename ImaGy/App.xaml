<Application x:Class="ImaGy.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ImaGy"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Color Palette -->
            <Color x:Key="WindowBackgroundColor">#FF1C1C1C</Color>
            <Color x:Key="PrimaryGrayColor">#FF2D2D30</Color>
            <Color x:Key="SecondaryGrayColor">#FF3F3F46</Color>
            <Color x:Key="TextColor">#FFF1F1F1</Color>
            <Color x:Key="AccentBlueColor">#FF3A7BD5</Color>
            <Color x:Key="AccentPurpleColor">#FF8A2BE2</Color>
            <Color x:Key="HoverColor">#FF3E3E42</Color>

            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
            <SolidColorBrush x:Key="PrimaryGrayBrush" Color="{StaticResource PrimaryGrayColor}"/>
            <SolidColorBrush x:Key="SecondaryGrayBrush" Color="{StaticResource SecondaryGrayColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
            <LinearGradientBrush x:Key="AccentGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Color="{StaticResource AccentBlueColor}" Offset="0.0" />
                <GradientStop Color="{StaticResource AccentPurpleColor}" Offset="1.0" />
            </LinearGradientBrush>

            <!-- Base Styles -->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
            </Style>

            <!-- Button Styles -->
            <Style TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryGrayBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource AccentGradientBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Menu">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Style>
            
            <!-- MenuItem Styling -->
            <Style TargetType="MenuItem">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <Grid>
                                    <ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,5,10,5"/>
                                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                        <Border x:Name="SubmenuBorder" Background="{StaticResource PrimaryGrayBrush}" BorderBrush="{StaticResource SecondaryGrayBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentGradientBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- GroupBox Styling --> 
            <Style TargetType="GroupBox">
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="2,5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GroupBox">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Background="{StaticResource PrimaryGrayBrush}" BorderBrush="{StaticResource SecondaryGrayBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0">
                                    <ContentPresenter ContentSource="Header" Margin="4" TextBlock.FontWeight="Bold" TextBlock.Foreground="{StaticResource TextBrush}"/>
                                </Border>
                                <Border Grid.Row="1" BorderBrush="{StaticResource SecondaryGrayBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3">
                                    <ContentPresenter Margin="4"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBox">
                <Setter Property="Background" Value="{StaticResource PrimaryGrayBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            </Style>

             <Style TargetType="ListBoxItem">
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="border" Padding="{TemplateBinding Padding}" Background="Transparent">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource AccentGradientBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
           
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource PrimaryGrayBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
                <Setter Property="CaretBrush" Value="{StaticResource TextBrush}"/>
            </Style>
            
            <Style TargetType="ScrollViewer">
                <Setter Property="Background" Value="{StaticResource PrimaryGrayBrush}"/>
            </Style>

            <Style TargetType="StatusBar">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryGrayBrush}"/>
                <Setter Property="BorderThickness" Value="0,1,0,0"/>
            </Style>
            
            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
                <Setter Property="Width" Value="5"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>