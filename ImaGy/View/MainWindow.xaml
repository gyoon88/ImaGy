<Window x:Class="ImaGy.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImaGy"
        xmlns:vm="clr-namespace:ImaGy.ViewModels"
        mc:Ignorable="d"
        Title="ImaGy" Height="900" Width="1600" MinHeight="500" MinWidth="1000">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveImageCommand}" />
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenImageCommand}" />
        <KeyBinding Modifiers="Control" Key="Z" Command="{Binding UndoCommand}" />
        <KeyBinding Modifiers="Control" Key="Y" Command="{Binding RedoCommand}" />
    </Window.InputBindings>

    <DockPanel>
        <!-- This DockPanel is the single child of Window -->
        <!-- Menu -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_파일">
                <MenuItem Header="열기" Command="{Binding OpenImageCommand}"/>
                <MenuItem Header="템플릿 이미지 열기" Command="{Binding OpenTemplateImageCommand}"/>
                <MenuItem Header="저장" Command="{Binding SaveImageCommand}"/>
                <Separator />
                <MenuItem Header="작업기록 내보내기" Command="{Binding ExportHistoryCommand}"/>
                <MenuItem Header="로그 내보내기" Command="{Binding ExportLogCommand}"/>

            </MenuItem>
            <MenuItem Header="_편집">
                <MenuItem Header="되돌리기" Command="{Binding UndoCommand}"/>
                <MenuItem Header="다시 실행" Command="{Binding RedoCommand}"/>
                <Separator />
                <MenuItem Header="복사" Command="{Binding CopyImageCommand}"/>
                <MenuItem Header="붙여넣기" Command="{Binding PasteImageCommand}"/>
            </MenuItem>
            <MenuItem Header="_보기">
                <MenuItem Header="히스토그램 보기" Command="{Binding ViewHistogramCommand}"/>
                <MenuItem Header="미니맵 보기" Command="{Binding MinimapCommand}"/>
            </MenuItem>
            <MenuItem Header="_도구">
                <MenuItem Header="자르기" Command="{Binding ApplyCropCommand}"/>
                <MenuItem Header="ROI 선택" Command="{Binding SelectRoiCommand}"/>
            </MenuItem>
            <MenuItem Header="_도움말">
                <MenuItem Header="단축키 안내"/>
                <MenuItem Header="정보"/>
            </MenuItem>
        </Menu>

        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding FileName}" Foreground="White" />
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ImageResolution}" Foreground="White" />
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ZoomLevel}"  Foreground="White"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding MouseCoordinates}"  Foreground="White"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ProcessingTime}"  Foreground="White"/>
            </StatusBarItem>
        </StatusBar>

        <!-- Main Content -->
        <Grid Background="{StaticResource WindowBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="300" MinWidth="250"/>
            </Grid.ColumnDefinitions>

            <!-- Original Image View -->
            <Border Grid.Column="0" BorderThickness="1" Margin="10,10,0,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Before"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0"
                        FontSize="12"
                        FontWeight="Bold"
                        Foreground="{StaticResource TextBrush}"/>
                    <Border Grid.Row="1" 
                        Height="1" 
                        Background="{StaticResource SecondaryGrayBrush}" 
                        Margin="5,5" />

                    <!--Here predfine the mouse that mouse can control size of image-->

                    <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                  x:Name="BeforeImageScrollViewer"
                                  ScrollChanged="BeforeImageScrollViewer_ScrollChanged">
                        <Grid>
                            <Image Source="{Binding BeforeImage}" Stretch="Uniform" x:Name="BeforeImageControl" MouseWheel="ImageControl_MouseWheel" MouseMove="Image_MouseMove" MouseLeave="Image_MouseLeave">
                                <Image.LayoutTransform>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                                </Image.LayoutTransform>
                            </Image>
                            <Canvas x:Name="BeforeRoiCanvas" 
                                    Visibility="{Binding RoiViewModel.IsDrawingRoi, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Border BorderBrush="Blue" BorderThickness="2"
                                        Canvas.Left="{Binding RoiViewModel.CurrentRoi.X}"
                                        Canvas.Top="{Binding RoiViewModel.CurrentRoi.Y}"
                                        Width="{Binding RoiViewModel.CurrentRoi.Width}"
                                        Height="{Binding RoiViewModel.CurrentRoi.Height}" />
                            </Canvas>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="1" />

            <!-- Processed Image View -->
            <Border Grid.Column="2" BorderThickness="1" Margin="10,10,10,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="After"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0"
                        FontSize="12"
                        FontWeight="Bold"
                        Foreground="{StaticResource TextBrush}"/>
                    <Border Grid.Row="1" 
                        Height="1" 
                        Background="{StaticResource SecondaryGrayBrush}" 
                        Margin="5,5" />
                    <!--Here predfine the mouse that mouse can control size of image-->
                    <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                  x:Name="AfterImageScrollViewer"
                                  ScrollChanged="AfterImageScrollViewer_ScrollChanged">
                        <Grid>
                            <Image Source="{Binding AfterImage}" Stretch="Uniform" x:Name="AfterImageControl" MouseWheel="ImageControl_MouseWheel">
                                <Image.LayoutTransform>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                                </Image.LayoutTransform>
                            </Image>
                            <!--<Canvas x:Name="AfterRoiCanvas" 
                                    Visibility="{Binding RoiViewModel.IsDrawingRoi, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Border BorderBrush="Blue" BorderThickness="2"
                                        Canvas.Left="{Binding RoiViewModel.CurrentRoi.X}"
                                        Canvas.Top="{Binding RoiViewModel.CurrentRoi.Y}"
                                        Width="{Binding RoiViewModel.CurrentRoi.Width}"
                                        Height="{Binding RoiViewModel.CurrentRoi.Height}" />
                            </Canvas>-->
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="3" />

            <!-- Right Side Panel -->
            <Grid Grid.Column="4" Margin="10,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Button Groups -->
                <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                    <GroupBox Header="Image Edittor" Foreground="White">
                        <StackPanel>
                            <Expander Header="Colour | Contrast" Foreground="White">
                                <StackPanel>
                                    <GroupBox Header="Binarization" Margin="5">
                                        <StackPanel>
                                            <Button Content="Othu's Binarization" Margin="2" Command="{Binding ColorContrastCommand}" CommandParameter="Bin_Othu"/>
                                            <Button Content="Binarization" Margin="2" Command="{Binding ColorContrastCommand}" CommandParameter="Bin"/>


                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Threshold:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Threshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Threshold, Mode=TwoWay}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>

                                        </StackPanel>
                                    </GroupBox>
                                    <Button Content="GreyScale" Margin="2" Command="{Binding ColorContrastCommand}" CommandParameter="Grey"/>
                                    <Button Content="Equalization" Margin="2" Command="{Binding ColorContrastCommand}" CommandParameter="Equal" />
                                    <Button Content="Color Equalization" Margin="2" Command="{Binding ColorContrastCommand}" CommandParameter="Equal_color" />
                                </StackPanel>
                            </Expander>

                            <Expander Header="Filterring" Foreground="White">
                                <StackPanel Cursor="">

                                    <GroupBox Header="Edge Detection">
                                        <StackPanel>
                                            <Button Content="Differential" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Diff" />
                                            <Button Content="Sobel" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Sobel"/>
                                            <Button Content="Laplacian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Laplace"/>
                                            <Button Content="Differential" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Diff_SSE" />
                                            <Button Content="Sobel" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Sobel_SSE"/>
                                            <Button Content="Laplacian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Laplace_SSE" />
                                            <Button Content="FFT" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Laplace_SSE"/>
                                        </StackPanel>
                                    </GroupBox>



                                    <GroupBox Header="Blur">
                                        <StackPanel>
                                            <Button Content="Average" Margin="2"  Command="{Binding FilterringCommand}" CommandParameter="Average"/>
                                            <Button Content="Gaussian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Gaussian"/>
                                            <Button Content="Average" Margin="2"  Command="{Binding FilterringCommand}" CommandParameter="Average_SSE"/>
                                            <Button Content="Gaussian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Gaussian_SSE"/>
                                        </StackPanel>
                                    </GroupBox>

                                    <GroupBox Header="Blur Parameter" Margin="5">
                                        <StackPanel>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Sigma:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Sigma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Sigma, Mode=TwoWay}" Minimum="0.1" Maximum="15" TickFrequency="0.1" VerticalAlignment="Center"/>
                                            </Grid>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Kernel:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding KernelSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding KernelSize, Mode=TwoWay}" Minimum="1" Maximum="25" TickFrequency="2" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>

                                </StackPanel>
                            </Expander>

                            <Expander Header="Morphorogy" Foreground="White">
                                <StackPanel>
                                    <Button Content="팽창" Margin="2" Command="{Binding MorphorogyCommand}" CommandParameter="Dilation"/>
                                    <Button Content="수축" Margin="2" Command="{Binding MorphorogyCommand}" CommandParameter="Erosion"/>
                                    <Button Content="팽창" Margin="2" Command="{Binding MorphorogyCommand}" CommandParameter="Dilation_SSE"/>
                                    <Button Content="수축" Margin="2" Command="{Binding MorphorogyCommand}" CommandParameter="Erosion_SSE"/>
                                </StackPanel>
                            </Expander>

                            <Expander Header="Image Matching" Foreground="White">
                                <StackPanel>
                                    <Button Content="NCC" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="NCC"/>
                                    <Button Content="SAD" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="SAD"/>
                                    <Button Content="SSD" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="SSD"/>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </GroupBox>

                </ScrollViewer>

                <!-- History -->
                <GroupBox Grid.Row="1" Header="작업 내역">
                    <ListBox x:Name="작업내역" ItemsSource="{Binding HistoryItems}" d:ItemsSource="{d:SampleData ItemCount=5}" />
                </GroupBox>

                <!-- Log -->
                <GroupBox Grid.Row="2" Header="로그">
                    <TextBox Text="{Binding LogText, Mode=OneWay}" IsReadOnly="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" />
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>