<Window x:Class="ImaGy.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImaGy"
        xmlns:vm="clr-namespace:ImaGy.ViewModels"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="ImaGy" Height="800" Width="1300" MinHeight="500" MinWidth="1000">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveImageCommand}" />
        <KeyBinding Modifiers="Control" Key="C" Command="{Binding CopyImageCommand}" />
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenImageCommand}" />
        <KeyBinding Modifiers="Control" Key="Z" Command="{Binding UndoCommand}" />
        <KeyBinding Modifiers="Control" Key="Y" Command="{Binding RedoCommand}" />
    </Window.InputBindings>
    <DockPanel>        
        <!-- Menu -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_파일">
                <MenuItem Header="열기" Command="{Binding OpenImageCommand}"/>
                <MenuItem Header="템플릿 이미지 열기" Command="{Binding OpenTemplateImageCommand}"/>
                <MenuItem Header="저장" Command="{Binding SaveImageCommand}"/>
                <Separator />
                <MenuItem Header="작업기록 내보내기" Command="{Binding ExportHistoryCommand}"/>
                <MenuItem Header="로그 내보내기" Command="{Binding ExportLogCommand}"/>
            </MenuItem>
            <MenuItem Header="_편집">
                <MenuItem Header="되돌리기" Command="{Binding UndoCommand}"/>
                <MenuItem Header="다시 실행" Command="{Binding RedoCommand}"/>
                <Separator />
                <MenuItem Header="복사" Command="{Binding CopyImageCommand}"/>
                <MenuItem Header="붙여넣기" Command="{Binding PasteImageCommand}"/>
            </MenuItem>
            <MenuItem Header="_보기">
                <MenuItem Header="히스토그램 보기" Command="{Binding ViewHistogramCommand}"/>
                <MenuItem Header="미니맵 보기" Command="{Binding MinimapCommand}"/>
            </MenuItem>
            <MenuItem Header="_도구">
                <MenuItem Header="자르기" Command="{Binding ApplyCropCommand}"/>
                
            </MenuItem>
            <MenuItem Header="_도움말">
                <MenuItem Header="단축키 안내"/>
                <MenuItem Header="정보"/>
            </MenuItem>
        </Menu>

        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding FileName}" Foreground="White" />
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ImageResolution}" Foreground="White" />
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ZoomLevel}"  Foreground="White"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding MouseCoordinates}"  Foreground="White"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ProcessingTime}"  Foreground="White"/>
            </StatusBarItem>
        </StatusBar>

        <Grid Background="{StaticResource WindowBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MinWidth="200"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="300" MinWidth="250"/>
            </Grid.ColumnDefinitions>

            <!-- Original Image View -->
            <Border Grid.Column="0" BorderThickness="1" Margin="10,10,0,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Before"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0"
                        FontSize="12"
                        FontWeight="Bold"
                        Foreground="{StaticResource TextBrush}"/>
                    <Border Grid.Row="1" 
                        Height="1" 
                        Background="{StaticResource SecondaryGrayBrush}" 
                        Margin="5,5" />

                    <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                  x:Name="BeforeImageScrollViewer"
                                  ScrollChanged="ScrollViewer_Sync"
                                  SizeChanged="BeforeImageScrollViewer_SizeChanged">
                        <Border x:Name="ImageContainer"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding ImageDisplay.CurrentZoomScale}" 
                                              ScaleY="{Binding ImageDisplay.CurrentZoomScale}"/>
                            </Border.LayoutTransform>
                            <Grid>
                                <Image Source="{Binding BeforeImage}" Stretch="None" x:Name="BeforeImage">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseWheel">
                                            <b:InvokeCommandAction Command="{Binding ZoomCommand}" PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="MouseDown">
                                            <b:InvokeCommandAction Command="{Binding PanMouseDownCommand}" PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="MouseMove">
                                            <b:InvokeCommandAction Command="{Binding PanMouseMoveCommand}" PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="MouseUp">
                                            <b:InvokeCommandAction Command="{Binding PanMouseUpCommand}" PassEventArgsToCommand="True" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="MouseLeave">
                                            <b:InvokeCommandAction Command="{Binding ClearMouseCoordinatesCommand}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </Image>
                                <Canvas>
                                    <Rectangle Stroke="Cyan" StrokeThickness="2" StrokeDashArray="4 2"
                                               Fill="#80ADD8E6"
                                               Visibility="{Binding InteractionService.IsInCropMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Canvas.Left="{Binding InteractionService.CropRectangle.X}"                 
                                               Canvas.Top="{Binding InteractionService.CropRectangle.Y}"                  
                                               Width="{Binding InteractionService.CropRectangle.Width}"                   
                                               Height="{Binding InteractionService.CropRectangle.Height}"/>
                                </Canvas>
                            </Grid>
                        </Border>
                    </ScrollViewer>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

            <!-- Processed Image View -->
            <Border Grid.Column="2" BorderThickness="1" Margin="0,10,10,10">
                 <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="After"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0"
                        FontSize="12"
                        FontWeight="Bold"
                        Foreground="{StaticResource TextBrush}"/>
                    <Border Grid.Row="1" 
                        Height="1" 
                        Background="{StaticResource SecondaryGrayBrush}" 
                        Margin="5,5" />
                    <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                  x:Name="AfterImageScrollViewer"
                                  ScrollChanged="ScrollViewer_Sync">
                        <Grid>
                            <Image Source="{Binding AfterImage}" Stretch="None">
                                <Image.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding ImageDisplay.CurrentZoomScale}" 
                                                  ScaleY="{Binding ImageDisplay.CurrentZoomScale}"/>
                                </Image.LayoutTransform>
                                
                                <b:Interaction.Triggers>
                                     <b:EventTrigger EventName="MouseWheel">
                                        <b:InvokeCommandAction Command="{Binding ZoomCommand}" PassEventArgsToCommand="True" />
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="MouseDown">
                                        <b:InvokeCommandAction Command="{Binding PanMouseDownCommand}" PassEventArgsToCommand="True" />
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="MouseMove">
                                        <b:InvokeCommandAction Command="{Binding PanMouseMoveCommand}" PassEventArgsToCommand="True" />
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="MouseUp">
                                        <b:InvokeCommandAction Command="{Binding PanMouseUpCommand}" PassEventArgsToCommand="True" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Image>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" />
            <!-- Right Side Panel -->
            <Grid Grid.Column="4" Margin="10,10,10,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*" />
                </Grid.RowDefinitions>
                <!-- Button Groups -->
                <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                    <GroupBox Header="Image Editor" Foreground="White">
                        <StackPanel>
                            <Expander Header="Colour | Contrast" Foreground="White" Margin="0,4,0,4">
                                <StackPanel>
                                    <GroupBox Header="Seperation">
                                        <StackPanel>
                                            <Button Content="Otsu's Binarization" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Bin_Otsu"/>
                                            <Button Content="Binarization" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Bin"/>
                                            <Separator Margin="5" Foreground="Gray"/>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Threshold:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.Threshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.Threshold, Mode=TwoWay}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>
                                            <Separator Margin="5" Foreground="Gray"/>
                                            <Button Content="KMeansClustering" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Clustering"/>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="K-Groups:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.KGroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.KGroup, Mode=TwoWay}" Minimum="2" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Iteration:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.Iteration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.Iteration, Mode=TwoWay}" Minimum="20" Maximum="500" TickFrequency="1" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="Color-Contrast">
                                        <StackPanel>
                                            <Button Content="Gray Scale" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Gray"/>
                                            <Button Content="Equalization" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Equal" />
                                            <Button Content="Color Equalization" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Equal_color"  IsEnabled="{Binding IsColor}"/>
                                        </StackPanel>                 
                                    </GroupBox>
                                </StackPanel>
                            </Expander>

                            <Expander Header="Filterring" Foreground="White"  Margin="0,4,0,4">
                                <StackPanel Cursor="">
                                    <GroupBox Header="Edge Detection">
                                        <StackPanel>
                                            <Button Content="Differential" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Diff" />
                                            <Button Content="Sobel" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Sobel"/>
                                            <Button Content="Laplacian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Laplace"/>
                                            <Separator Margin="5" Foreground="Gray"/>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Kernel:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.KernelSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.KernelSize, Mode=TwoWay}" Minimum="1" Maximum="25" TickFrequency="2" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid> 
                                        </StackPanel>
                                    </GroupBox>
                                    
                                    <GroupBox Header="Blur">
                                        <StackPanel>
                                            <Button Content="Average" Margin="2"  Command="{Binding FilterringCommand}" CommandParameter="Average"/>
                                            <Button Content="Gaussian" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Gaussian"/>
                                            <Separator Margin="5" Foreground="Gray"/>
                                            <ToggleButton Content="Circular Kernel" IsChecked="{Binding Parameters.UseCircularKernel, Mode=TwoWay}" Margin="60,5,60,5" />
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>                                                    
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Sigma:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.Sigma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.Sigma, Mode=TwoWay}" Minimum="0.1" Maximum="15" TickFrequency="0.1" VerticalAlignment="Center"/>
                                            </Grid>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Kernel:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.KernelSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.KernelSize, Mode=TwoWay}" Minimum="1" Maximum="15" TickFrequency="2" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                    <GroupBox Header="FFT">
                                        <StackPanel>
                                            <Button Content="FFT" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="FFT"/>
                                            <Separator Margin="5" Foreground="Gray"/>
                                            <ToggleButton Content="CPU" IsChecked="{Binding Parameters.IsCPU, Mode=TwoWay}" Margin="60,5,60,5" />
                                            <!--<ToggleButton Content="IsInverse" IsChecked="{Binding Parameters.IsInverse, Mode=TwoWay}" Margin="60,5,60,5" />-->
                                            <ToggleButton Content="IsPhase" IsChecked="{Binding Parameters.IsPhase, Mode=TwoWay}" Margin="60,5,60,5" />

                                            <Button Content="FFT Rowfilter" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="FFT_Row"/>
                                            <Button Content="FFT Highfilter" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="FFT_High"/>

                                            <Separator Margin="5" Foreground="Gray"/>
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Radius Ratio:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                <TextBox Grid.Column="1" Text="{Binding Parameters.RadiusRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                <Slider Grid.Column="2" Value="{Binding Parameters.RadiusRatio, Mode=TwoWay}" Minimum="0.1" Maximum="1" TickFrequency="0.01" VerticalAlignment="Center"/>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </Expander>
                            <Expander Header="Morphorogy" Foreground="White"  Margin="0,4,0,4">
                                <StackPanel>
                                    <GroupBox Header = "Default" Foreground="White">
                                        <StackPanel>
                                            <StackPanel>
                                                <Button Content="Dilation" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Dilation"/>
                                                <Button Content="Erosion" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Erosion"/>
                                                <Button Content="Opening" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Opening"/>
                                                <Button Content="Closing" Margin="2" Command="{Binding FilterringCommand}" CommandParameter="Closing"/>
                                                <Separator Margin="5" Foreground="Gray"/>
                                                <ToggleButton Content="Circular Kernel" IsChecked="{Binding Parameters.UseCircularKernel, Mode=TwoWay}" Margin="60,5,60,5" />
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="50"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="Kernel:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                    <TextBox Grid.Column="1" Text="{Binding Parameters.KernelSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                                    <Slider Grid.Column="2" Value="{Binding Parameters.KernelSize, Mode=TwoWay}" Minimum="1" Maximum="25" TickFrequency="2" IsSnapToTickEnabled="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </StackPanel>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </Expander>
                            <Expander Header="Image Matching" Foreground="White" Margin="0,4,0,4">                                
                                 <GroupBox Header="Score Base">
                                    <StackPanel>
                                        <Button Content="NCC" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="NCC"/>
                                        <Button Content="SAD" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="SAD"/>
                                        <Button Content="SSD" Margin="2" Command="{Binding ImageMatchingCommand}" CommandParameter="SSD"/>
                                    </StackPanel>
                                </GroupBox>
                            </Expander>
                        </StackPanel>
                    </GroupBox>
                </ScrollViewer>
                <GridSplitter Grid.Row="1" 
                  Height="5" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Center" 
                  Background="{StaticResource SecondaryGrayBrush}"
                  ShowsPreview="True"/>
                <!-- History -->
                <GroupBox Grid.Row="2" Header="작업 내역">
                    <ListBox x:Name="작업내역" ItemsSource="{Binding HistoryItems}" d:ItemsSource="{d:SampleData ItemCount=5}" />
                </GroupBox>
                <GridSplitter Grid.Row="3" 
                  Height="5" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Center" 
                  Background="{StaticResource SecondaryGrayBrush}"
                  ShowsPreview="True"/>
                <!-- Log -->
                <GroupBox Grid.Row="4" Header="로그">
                    <TextBox Text="{Binding LogText, Mode=OneWay}" IsReadOnly="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" />
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>